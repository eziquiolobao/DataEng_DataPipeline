version: '3.9'
services:
  airflow_db:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 5s
      retries: 10
  airflow:
    image: apache/airflow:2.7.0-python3.10
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow_db:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT}
      SNOWFLAKE_USER: ${SNOWFLAKE_USER}
      SNOWFLAKE_PASSWORD: ${SNOWFLAKE_PASSWORD}
      SNOWFLAKE_DATABASE: ${SNOWFLAKE_DATABASE}
      SNOWFLAKE_WAREHOUSE: ${SNOWFLAKE_WAREHOUSE}
      SNOWFLAKE_SCHEMA: ${SNOWFLAKE_SCHEMA:-PUBLIC}
      SNOWFLAKE_ROLE: ${SNOWFLAKE_ROLE:-SYSADMIN}
    depends_on:
      airflow_db:
        condition: service_healthy
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./house_dbt_project:/opt/airflow/dbt
      - ./data:/opt/airflow/data
      - ./airflow/entrypoint.sh:/opt/airflow/entrypoint.sh
    restart: always
    ports:
      - '8080:8080'
    command: ["bash", "/opt/airflow/entrypoint.sh"]

  dbt:
    image: ghcr.io/dbt-labs/dbt-snowflake:1.7.0
    platform: linux/amd64
    env_file:
      - .env
    environment:
      SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT}
      SNOWFLAKE_USER: ${SNOWFLAKE_USER}
      SNOWFLAKE_PASSWORD: ${SNOWFLAKE_PASSWORD}
      SNOWFLAKE_WAREHOUSE: ${SNOWFLAKE_WAREHOUSE}
      SNOWFLAKE_DATABASE: ${SNOWFLAKE_DATABASE}
      SNOWFLAKE_SCHEMA: ${SNOWFLAKE_SCHEMA:-PUBLIC}
      SNOWFLAKE_ROLE: ${SNOWFLAKE_ROLE:-SYSADMIN}
    volumes:
      - ./house_dbt_project:/app
      - ./data:/app/data
    working_dir: /app
    entrypoint: sh
    command: ["-c", "dbt deps && dbt build"]

  snowflake:
    build:
      context: .
      dockerfile: dockerfile.snowpark
    environment:
      SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT}
      SNOWFLAKE_USER: ${SNOWFLAKE_USER}
      SNOWFLAKE_PASSWORD: ${SNOWFLAKE_PASSWORD}
      SNOWFLAKE_WAREHOUSE: ${SNOWFLAKE_WAREHOUSE}
      SNOWFLAKE_DATABASE: ${SNOWFLAKE_DATABASE}
      SNOWFLAKE_SCHEMA: ${SNOWFLAKE_SCHEMA:-PUBLIC}
      SNOWFLAKE_ROLE: ${SNOWFLAKE_ROLE:-SYSADMIN}
    command: sleep infinity

volumes:
  pgdata:
